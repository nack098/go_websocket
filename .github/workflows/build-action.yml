name: Build Project
run-name: Project Building
on:
  push:
    branches:
      - main
jobs:
  code-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Project check
        uses: securego/gosec@v2.22.1
        with:
          args: ./..

  windows-build:
    runs-on: windows-latest
    needs: [code-check]
    steps:
      - name: Checking out project
        uses: actions/checkout@v4

      - name: Setup environment
        uses: actions/setup-go@v5.3.0
        with:
          go-version: "^1.23.6"

      - name: Build the project
        run: make platform.windows

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-websocket_windows
          path: ./build/go-websocket_windows.exe

  macos-build:
    runs-on: macos-latest
    needs: [code-check]
    steps:
      - name: Checking out project
        uses: actions/checkout@v4

      - name: Setup environment
        uses: actions/setup-go@v5.3.0
        with:
          go-version: "^1.23.6"

      - name: Build the project
        run: make platform.darwin

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-websocket_darwin
          path: ./build/go-websocket_darwin

  linux-build:
    runs-on: ubuntu-latest
    needs: [code-check]
    steps:
      - name: Checking out project
        uses: actions/checkout@v4

      - name: Setup environment
        uses: actions/setup-go@v5.3.0
        with:
          go-version: "^1.23.6"

      - name: Build the project
        run: make platform.linux

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-websocket_linux
          path: ./build/go-websocket_linux

  release:
    runs-on: ubuntu-latest
    needs: [windows-build, macos-build, linux-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          VERSION=$(make version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded-artifacts (debugging)
        run: ls -R ./artifacts

      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
          tag_name: ${{ env.VERSION }}
          release_name: Release-${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
